% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distanceGoogle.R
\name{distanceGoogle}
\alias{distanceGoogle}
\title{Usando la API de distancia de Google
La API de dsitancia de Google nos permite conocer la distancia y tiempo de transporte, entre muchas otras varaibles,
en viajes desde cualquier punto de origen y destino. La función distanceGoogle() nos permite comunicarnos de manera
fácil y organizada con Google.
Por default, la función espera dos objetos sf en "origins" y "destination" con una columna que identifique
a cada uno de los puntos de manera individual en cada uno de los data.frames
La función devuelve un data.frame con dos columnas con los IDs de ambos objetos sf y lo que haya devuelvo la
API de google. Próximamente se incluirá la posibilidad de usar direcciones no geocodificadas.}
\usage{
distanceGoogle(
  origins = NULL,
  destination = NULL,
  travelMode = "driving",
  idCols = NULL,
  addressCols = NULL,
  arrival_time = NULL,
  key = NULL
)
}
\arguments{
\item{origins}{obligatorio: objeto sf o data.frame/data.table con los puntos o direcciones de inicio de viaje}

\item{destination}{obligatorio: objeto sf o data.frame/data.table con los puntos o direcciones de destino de viaje. Debe tener una sola fila}

\item{travelMode}{obligatorio: Nombre del tipo de distancia a buscar. "driving" para viajes en auto, "bicycling" para viajes en bicileta, "walking" para viajes caminando y "transit" para viajes en transporte público}

\item{idCols}{obligatorio: Vector character de dos posiciones con información sobre el nombre de las columnas que contiene el ID en origins y destination (respectivamente)}

\item{addressCols}{opcional: Si se envía un vector character de dos posiciones com información sobre las columnas que contienen las direcciones, se usarán estas en lugar de los puntos espaciales en la consulta a Google (PENDIENTE DE IMPLEMENTACIÓN)}

\item{arrival_time}{opcional: Tiempo de llegada para el viaje. Debe ser un vector numérico y estar en formato Epoch/Timestamp. Ver en https://www.epochconverter.com/}

\item{key}{obligatorio: vector de character con la key de Google API}
}
\value{
Un objeto data.frame con información sobre la ubicación espacial de direcciones de Argentina
}
\description{
Usando la API de distancia de Google
La API de dsitancia de Google nos permite conocer la distancia y tiempo de transporte, entre muchas otras varaibles,
en viajes desde cualquier punto de origen y destino. La función distanceGoogle() nos permite comunicarnos de manera
fácil y organizada con Google.
Por default, la función espera dos objetos sf en "origins" y "destination" con una columna que identifique
a cada uno de los puntos de manera individual en cada uno de los data.frames
La función devuelve un data.frame con dos columnas con los IDs de ambos objetos sf y lo que haya devuelvo la
API de google. Próximamente se incluirá la posibilidad de usar direcciones no geocodificadas.
}
\examples{
\dontrun{
# df <- data.frame(direccion=c("Estadio Monumental","Cervecería Baum","FCE - UBA"),
                   lat=c(-34.5453444,-34.6258789,-34.6002407),
                   long=c(-58.4498438,-58.4319205,-58.3983398))
df$id <- 1:nrow(df)

df <- st_as_sf(df,coords=c("long","lat"),crs=4326)


distancias <- distanceGoogle(origins=df[!df$direccion == "Estadio Monumental",],
                             destination = df[df$direccion == "Estadio Monumental",],
                             idCols=c("id","id"),
                             key="afafaf31fafada",
                             travelMode="transit",
                             arrival_time = 1590494400)
# Hay que cambiar el valor de la key por uno real para que funcione
}
}
